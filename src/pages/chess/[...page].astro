---
import BaseLayout from "../../layouts/BaseLayout.astro";
import HorizontalCard from "../../components/HorizontalCard.astro";
import { getCollection } from "astro:content";
import { createChessSlug, createChessTitle } from "../../lib/util";
import LargeTitle from "@components/LargeTitle.astro";
import PaginationButtons from "@components/PaginationButtons.astro";
import { PAGINATION_SIZE } from "src/config";
import type { InferGetStaticPropsType, GetStaticPaths } from "astro";

export const getStaticPaths = (async ({ paginate }) => {
    const games = await getCollection("chess");
    return paginate(games.toReversed(), { pageSize: PAGINATION_SIZE });
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const games = await getCollection("chess");
const tournaments = games.map((p) => p.data.tournament);
let uniqueTournaments = [...new Set(tournaments.toReversed())];
const tournamentsPathsMap: [string, string][] = uniqueTournaments.map((y) => [
    y,
    "/chess/tournament/" + y,
]);
const { page } = Astro.props;
---

<BaseLayout
    title="Chess"
    sideBarActiveItemID="chess"
    currentPage={page.currentPage}
>
    <LargeTitle title="Chess" path="/chess" filters={tournamentsPathsMap} />
    <ul>
        {
            page.data.map((game) => (
                <>
                    <HorizontalCard
                        title={createChessTitle(game)}
                        url={"/chess/" + createChessSlug(game)}
                        tags={[game.data.tournament]}
                    />
                </>
            ))
        }
    </ul>
    <PaginationButtons page={page} path="/chess" />
</BaseLayout>
