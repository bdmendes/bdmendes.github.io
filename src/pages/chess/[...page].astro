---
import BaseLayout from "../../layouts/BaseLayout.astro";
import HorizontalCard from "../../components/HorizontalCard.astro";
import { getCollection } from "astro:content";
import {
  buildChessMetaTags,
  createChessSlug,
  createChessTitle,
  extractDate,
  sortedByDate,
} from "../../lib/util";
import LargeTitle from "@components/LargeTitle.astro";
import PaginationButtons from "@components/PaginationButtons.astro";
import { PAGINATION_SIZE } from "src/config";
import type { InferGetStaticPropsType, GetStaticPaths } from "astro";

export const getStaticPaths = (async ({ paginate }) => {
  const games = sortedByDate(await getCollection("chess"));
  return paginate(games, { pageSize: PAGINATION_SIZE });
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const games = sortedByDate(await getCollection("chess"));
const tournaments = games.map((p) => p.data.tournament);
let uniqueTournaments = [...new Set(tournaments)];
const tournamentsPathsMap: [string, string][] = uniqueTournaments.map((y) => [
  y,
  "/chess/tournament/" + y,
]);
const { page } = Astro.props;
---

<BaseLayout
  title="Chess"
  sideBarActiveItemID="chess"
  currentPage={page.currentPage}
>
  <LargeTitle title="Chess" path="/chess" filters={tournamentsPathsMap} />
  <ul>
    {
      page.data.map((game) => (
        <>
          <HorizontalCard
            title={createChessTitle(game)}
            url={"/chess/" + createChessSlug(game)}
            tags={[game.data.tournament]}
            disabledTags={buildChessMetaTags(game.data.round, game.data.board)}
          />
        </>
      ))
    }
  </ul>
  <PaginationButtons page={page} path="/chess" />
</BaseLayout>
