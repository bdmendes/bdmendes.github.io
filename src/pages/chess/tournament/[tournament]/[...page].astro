---
import BaseLayout from "../../../../layouts/BaseLayout.astro";
import HorizontalCard from "../../../../components/HorizontalCard.astro";
import { getCollection } from "astro:content";
import {
  buildChessMetaTags,
  capitalize,
  createChessSlug,
  createChessTitle,
  extractDate,
  sortedByDate,
} from "../../../../lib/util";
import LargeTitle from "@components/LargeTitle.astro";
import PaginationButtons from "@components/PaginationButtons.astro";
import { PAGINATION_SIZE } from "src/config";
import type { GetStaticPaths } from "astro";

const { page } = Astro.props;
const { tournament } = Astro.params;

export const getStaticPaths = (async ({ paginate }) => {
  const games = sortedByDate(await getCollection("chess"));
  const tournaments = games.map((p) => p.data.tournament);
  const uniqueTournaments = [...new Set(tournaments)];

  return uniqueTournaments.flatMap((tournament) => {
    const matchingGames = games.filter((p) => p.data.tournament === tournament);
    return paginate(matchingGames, {
      pageSize: PAGINATION_SIZE,
      params: { tournament },
    });
  });
}) satisfies GetStaticPaths;
---

<BaseLayout
  title={"Chess | " + capitalize(tournament)}
  sideBarActiveItemID="chess"
  currentPage={page.currentPage}
>
  <LargeTitle title="Chess" path="/chess" selector={tournament} />
  <ul>
    {
      page.data.map((game) => (
        <>
          <HorizontalCard
            title={createChessTitle(game)}
            url={"/chess/" + createChessSlug(game)}
            tags={[game.data.tournament]}
            disabledTags={buildChessMetaTags(game.data.round, game.data.board)}
          />
        </>
      ))
    }
  </ul>
  <PaginationButtons page={page} path={"/chess/tournament/" + tournament} />
</BaseLayout>
