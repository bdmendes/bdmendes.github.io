---
import BaseLayout from "../../../../layouts/BaseLayout.astro";
import HorizontalCard from "../../../../components/HorizontalCard.astro";
import { getCollection } from "astro:content";
import {
    createSlug,
    extractDate,
    extractDescription,
    augmentTagsWithDate,
} from "../../../../lib/util";
import LargeTitle from "@components/LargeTitle.astro";
import PaginationButtons from "@components/PaginationButtons.astro";
import { PAGINATION_SIZE } from "src/config";
import type { GetStaticPaths } from "astro";

const { page } = Astro.props;
const { tag } = Astro.params;

export const getStaticPaths = (async ({ paginate }) => {
    const posts = await getCollection("blog");
    const tags = posts.flatMap((p) => p.data.tags);
    const uniqueTags = [...new Set(tags)].filter((t) => t != null);

    return uniqueTags.flatMap((tag) => {
        const matchingposts = posts.filter((p) =>
            (p.data.tags ?? []).includes(tag),
        );
        matchingposts.sort(
            (a, b) => extractDate(b.id).valueOf() - extractDate(a.id).valueOf(),
        );
        return paginate(matchingposts, {
            pageSize: PAGINATION_SIZE,
            params: { tag },
        });
    });
}) satisfies GetStaticPaths;
---

<BaseLayout title={"Blog | " + tag} sideBarActiveItemID="blog">
    <LargeTitle title="Blog" path="/blog" selector={tag} />
    <ul>
        {
            page.data.map((post) => (
                <>
                    <HorizontalCard
                        title={post.data.title}
                        img={post.data.hero}
                        description={extractDescription(post.body)}
                        url={"/blog/" + createSlug(post.data.title)}
                        tags={augmentTagsWithDate(post.data.tags, post.id)}
                    />
                    <div class="divider my-0" />
                </>
            ))
        }
    </ul>
    <PaginationButtons page={page} path={"/blog/tag/" + tag} />
</BaseLayout>
