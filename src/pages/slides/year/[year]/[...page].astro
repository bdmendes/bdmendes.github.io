---
import BaseLayout from "@layouts/BaseLayout.astro";
import HorizontalCard from "@components/HorizontalCard.astro";
import { getCollection } from "astro:content";
import {
    createSlug,
    extractDate,
    augmentTagsWithDate,
    sortedByDate,
} from "../../../../lib/util";
import LargeTitle from "@components/LargeTitle.astro";
import PaginationButtons from "@components/PaginationButtons.astro";
import { PAGINATION_SIZE } from "src/config";
import type { InferGetStaticPropsType, GetStaticPaths } from "astro";

export const getStaticPaths = (async ({ paginate }) => {
    const slides = sortedByDate(await getCollection("slides"));
    const years = slides.flatMap((p) =>
        extractDate(p.id).getFullYear().toString(),
    );
    const uniqueYears = [...new Set(years)];

    return uniqueYears.flatMap((year) => {
        const matchingSlides = slides.filter(
            (p) => extractDate(p.id).getFullYear().toString() === year,
        );
        return paginate(matchingSlides, {
            pageSize: PAGINATION_SIZE,
            params: { year },
        });
    });
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { page } = Astro.props;
const { year } = Astro.params;
---

<BaseLayout
    title={"Slides | " + year}
    sideBarActiveItemID="slides"
    currentPage={page.currentPage}
>
    <LargeTitle title="Slides" path="/slides" selector={year} />
    <ul>
        {
            page.data.map((slide) => (
                <>
                    <HorizontalCard
                        title={slide.data.title}
                        description={slide.data.description}
                        url={"/slides/" + createSlug(slide.data.title)}
                        tags={augmentTagsWithDate(slide.data.tags, slide.id)}
                    />
                </>
            ))
        }
    </ul>
    <PaginationButtons page={page} path={"/slides/year/" + year} />
</BaseLayout>
