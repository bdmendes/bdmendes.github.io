---
import BaseLayout from "@layouts/BaseLayout.astro";
import HorizontalCard from "@components/HorizontalCard.astro";
import { getCollection } from "astro:content";
import {
  createSlug,
  extractDate,
  extractDescription,
  dateTag,
  sortedByDate,
} from "../../lib/util";
import LargeTitle from "@components/LargeTitle.astro";
import PaginationButtons from "@components/PaginationButtons.astro";
import { PAGINATION_SIZE } from "src/config";
import type { GetStaticPaths } from "astro";

export const getStaticPaths = (async ({ paginate }) => {
  const poems = sortedByDate(await getCollection("poetry"));
  return paginate(poems, { pageSize: PAGINATION_SIZE });
}) satisfies GetStaticPaths;

const poems = await getCollection("poetry");
const uniqueYears = [
  ...new Set(poems.map((p) => extractDate(p.id).getFullYear().toString())),
]
  .toSorted()
  .toReversed();
const yearPathsMap: [string, string][] = uniqueYears.map((y) => [
  y,
  "/poetry/year/" + y,
]);

const { page } = Astro.props;
---

<BaseLayout
  title="Poetry"
  sideBarActiveItemID="poetry"
  currentPage={page.currentPage}
>
  <LargeTitle title="Poetry" path="/poetry" filters={yearPathsMap} />
  <ul>
    {
      page.data.map((poem) => (
        <>
          <HorizontalCard
            title={poem.data.title}
            description={extractDescription(poem.body!)}
            url={"/poetry/" + createSlug(poem.data.title)}
          />
        </>
      ))
    }
  </ul>
  <PaginationButtons page={page} path="/poetry" />
</BaseLayout>
