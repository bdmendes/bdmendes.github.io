---
import BaseLayout from "../../../../layouts/BaseLayout.astro";
import HorizontalCard from "../../../../components/HorizontalCard.astro";
import { getCollection } from "astro:content";
import {
  createSlug,
  extractDescription,
  augmentTagsWithDate,
  capitalize,
} from "../../../../lib/util";
import LargeTitle from "@components/LargeTitle.astro";
import PaginationButtons from "@components/PaginationButtons.astro";
import { PAGINATION_SIZE } from "src/config";
import type { GetStaticPaths } from "astro";

const { page } = Astro.props;
const { tag } = Astro.params;

export const getStaticPaths = (async ({ paginate }) => {
  const poems = await getCollection("poetry");
  const tags = poems.flatMap((p) => p.data.tags);
  const uniqueTags = [...new Set(tags)].filter((t) => t != null);

  return uniqueTags.flatMap((tag) => {
    const matchingPoems = poems.filter((p) =>
      (p.data.tags ?? []).includes(tag)
    );
    return paginate(matchingPoems.toReversed(), {
      pageSize: PAGINATION_SIZE,
      params: { tag },
    });
  });
}) satisfies GetStaticPaths;
---

<BaseLayout
  title={"Poetry | " + capitalize(tag)}
  sideBarActiveItemID="poetry"
  currentPage={page.currentPage}
>
  <LargeTitle title="Poetry" path="/poetry" selector={tag} />
  <ul>
    {
      page.data.map((poem) => (
        <>
          <HorizontalCard
            title={poem.data.title}
            description={extractDescription(poem.body!)}
            url={"/poetry/" + createSlug(poem.data.title)}
            tags={augmentTagsWithDate(poem.data.tags, poem.id)}
          />
        </>
      ))
    }
  </ul>
  <PaginationButtons page={page} path={"/poetry/tag/" + tag} />
</BaseLayout>
