---
import BaseLayout from "@layouts/BaseLayout.astro";
import HorizontalCard from "@components/HorizontalCard.astro";
import { getCollection } from "astro:content";
import {
  createSlug,
  extractDate,
  extractDescription,
  sortedByDate,
} from "../../../../lib/util";
import LargeTitle from "@components/LargeTitle.astro";
import PaginationButtons from "@components/PaginationButtons.astro";
import { PAGINATION_SIZE } from "src/config";
import type { InferGetStaticPropsType, GetStaticPaths } from "astro";

export const getStaticPaths = (async ({ paginate }) => {
  const poems = sortedByDate(await getCollection("poetry"));
  const years = poems.flatMap((p) =>
    extractDate(p.id).getFullYear().toString()
  );
  const uniqueYears = [...new Set(years)];

  return uniqueYears.flatMap((year) => {
    const matchingPoems = poems.filter(
      (p) => extractDate(p.id).getFullYear().toString() === year
    );
    return paginate(matchingPoems, {
      pageSize: PAGINATION_SIZE,
      params: { year },
    });
  });
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { page } = Astro.props;
const { year } = Astro.params;
---

<BaseLayout
  title={"Poetry | " + year}
  sideBarActiveItemID="poetry"
  currentPage={page.currentPage}
>
  <LargeTitle title="Poetry" path="/poetry" selector={year} search={true} />
  <ul>
    {
      page.data.map((poem) => (
        <>
          <HorizontalCard
            title={poem.data.title}
            description={extractDescription(poem.body!)}
            url={"/poetry/" + createSlug(poem.data.title)}
          />
        </>
      ))
    }
  </ul>
  <PaginationButtons page={page} path={"/poetry/year/" + year} />
</BaseLayout>
