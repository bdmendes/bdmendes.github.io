---
import type { GetStaticPaths } from "astro";
import BaseLayout from "@layouts/BaseLayout.astro";
import PaginationButtons from "@components/PaginationButtons.astro";
import { capitalize, extractDate, sortedByDate } from "src/lib/util";
import { getCollection } from "astro:content";
import { PAGINATION_SIZE } from "src/config";
import LargeTitle from "@components/LargeTitle.astro";
import SmallEntryCard from "@components/SmallEntryCard.astro";

const { page } = Astro.props;
const { author } = Astro.params;

export const getStaticPaths = (async ({ paginate }) => {
  const libraryEntries = await getCollection("library");
  const authors = Array.from(
    new Set(libraryEntries.map((entry) => entry.data.author))
  );

  return authors.flatMap((author) => {
    const entries = sortedByDate(
      libraryEntries.filter((e) => e.data.author === author),
      true
    );
    return paginate(entries, {
      pageSize: PAGINATION_SIZE,
      params: { author },
    });
  });
}) satisfies GetStaticPaths;
---

<BaseLayout
  title={"Library | " + capitalize(author)}
  sideBarActiveItemID="library"
  currentPage={page.currentPage}
>
  <LargeTitle title="Library" path="/library" selector={author} />
  <ul class="grid sm:grid-cols-2 gap-3 py-2">
    {
      page.data.map((entry) => (
        <>
          <SmallEntryCard
            title={entry.data.title + " (" + entry.data.year + ")"}
            img={entry.data.hero!}
            description={entry.body!}
            tertiaryBadge={[
              entry.data.evaluation + "â˜…/5",
              "/library/evaluation/" + entry.data.evaluation,
            ]}
            ghostBadge={extractDate(entry.id).getFullYear().toString()}
          />
        </>
      ))
    }
  </ul>
  <PaginationButtons page={page} path={"/library/author/" + author} />
</BaseLayout>
