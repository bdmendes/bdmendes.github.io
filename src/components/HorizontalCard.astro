---
export interface Props {
  title: string;
  title2?: string;
  img?: ImageMetadata;
  description?: string;
  url?: string;
  badge?: string;
  tags?: string[];
  disabledTags?: string[];
  divideTop?: boolean;
  divideBottom?: boolean;
  forceVertical?: boolean;
  blockScale?: boolean;
}

const {
  title,
  title2,
  img,
  description,
  url,
  badge,
  tags = [],
  disabledTags = [],
  divideBottom = true,
  divideTop = false,
  forceVertical = false,
  blockScale = false,
} = Astro.props;
import { Image } from "astro:assets";
---

<div class="flex flex-col">
  {divideTop && <div class="divider my-0" />}
  <div
    class=`rounded grow hover:shadow-xl transition ease-in-out hover:scale-[102%] ${blockScale ? "block-scale" : ""}`
  >
    <a class="w-full" href={url}>
      <div
        class={`w-full hero-content px-4 flex flex-col items-start ${forceVertical ? "" : "sm:flex-row"}`}
      >
        <slot />
        {
          img && (
            <Image
              src={img}
              format="webp"
              alt={title}
              class="sm:max-w-48 rounded aspect-video object-cover max-h-32"
            />
          )
        }
        <div class="grow w-full">
          <h1 class="text-xl font-bold mr-2 -mt-0.5">
            {title}
          </h1>
          {title2 && <h1 class="text-xl font-bold mr-2">{title2}</h1>}
          <p class="py-1">{description}</p>
          {
            (tags.length > 0 || badge || disabledTags.length > 0) && (
              <div class="card-actions justify-end mt-2 mb-1">
                {disabledTags.toReversed().map((tag) => (
                  <span class="badge badge-ghost">{tag}</span>
                ))}
                {tags.toReversed().map((tag) => (
                  <span class="badge badge-outline">{tag}</span>
                ))}
                {badge && <span class="badge badge-outline">{badge}</span>}
              </div>
            )
          }
        </div>
      </div>
    </a>
  </div>
  {divideBottom && <div class="divider my-0" />}
</div>
